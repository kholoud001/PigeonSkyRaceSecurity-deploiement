spring.application.name=PigeonSkyRaceSpringSecurity

spring.profiles.active=prod
logging.level.org.springframework.security=DEBUG


server.ssl.enabled=true
server.port=8443
server.ssl.key-store=classpath:keystore.p12
server.ssl.key-store-type=PKCS12
server.ssl.key-store-password=azerty
server.ssl.key-alias=myapp

# Keycloak Config
spring.security.oauth2.client.registration.keycloak.client-id=spring-boot-app
spring.security.oauth2.client.registration.keycloak.client-secret=HC8CAdJXicjYIHBXBTOUvTifFGqnqoXM
spring.security.oauth2.client.registration.keycloak.scope=openid
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.keycloak.redirect-uri=https://localhost:8443/login/oauth2/code/keycloak
# OAuth2 Client configuration
spring.security.oauth2.client.provider.keycloak.issuer-uri=http://keycloak-container:8080/realms/pigeonSecurity

#configure your Spring Boot application as a resource server that consumes JWT tokens issued by Keycloak.
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://keycloak-container:8080/realms/pigeonSecurity
# JSON Web Key Set (JWKS) for validating JWT tokens is located.
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://keycloak-container:8080/realms/pigeonSecurity/protocol/openid-connect/certs

# JWT role configuration
spring.security.oauth2.resourceserver.jwt.authorities-claim-name=realm_access.roles
spring.security.oauth2.resourceserver.jwt.authority-prefix=ROLE_


